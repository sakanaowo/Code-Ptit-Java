import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.*;

class IntSet {
    TreeSet<Integer> set;

    IntSet(int[] a) {
        this.set = new TreeSet<>();
        for (int i : a) set.add(i);
    }

    IntSet(Set<Integer> s) {
        this.set = new TreeSet<>(s);
    }

    public IntSet union(IntSet other) {
        TreeSet<Integer> union = new TreeSet<>(this.set);
        union.addAll(other.set);
        return new IntSet(union);
    }

    public IntSet intersection(IntSet other) {
        TreeSet<Integer> intersection = new TreeSet<>(this.set);
        intersection.retainAll(other.set);
        return new IntSet(intersection);
    }


    @Override
    public String toString() {
        List<Integer> sortedList = new ArrayList<>(set);
        Collections.sort(sortedList);
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < sortedList.size(); i++) sb.append(sortedList.get(i) + " ");
        return sb.toString();
    }

}

public class Sakana {
    public static void main(String[] args) throws FileNotFoundException, IOException {
        Scanner sc = new Scanner(new File("DATA.in"));
        int n = sc.nextInt(), m = sc.nextInt(), a[] = new int[n], b[] = new int[m];
        for (int i = 0; i < n; i++) a[i] = sc.nextInt();
        for (int i = 0; i < m; i++) b[i] = sc.nextInt();
        IntSet s1 = new IntSet(a);
        IntSet s2 = new IntSet(b);
        IntSet s3 = s1.intersection(s2);
        System.out.println(s3);
    }
}

