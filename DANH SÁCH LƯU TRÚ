import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

class Customer implements Comparable<Customer> {
    String name, ID, room, checkin, checkout;
    long stay;
    static int index = 1;

    public Customer() {
        this.ID = String.format("KH%02d", index++);
        this.name = Sakana.sc.nextLine();
        this.room = Sakana.sc.nextLine();
        this.checkin = Sakana.sc.nextLine();
        this.checkout = Sakana.sc.nextLine();
        this.stay = solve();
    }

    private long solve() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate in = LocalDate.parse(this.checkin, dtf);
        LocalDate out = LocalDate.parse(this.checkout, dtf);
        return ChronoUnit.DAYS.between(in, out);
    }

    public int compareTo(Customer o) {
        return -Long.compare(this.stay, o.stay);
    }

    public String toString() {
        return ID + " " + name + " " + room + " " + stay;
    }
}

public class Sakana {
    static Scanner sc;

    static {
        try {
            sc = new Scanner(new File("KHACH.in"));
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        }
    }

    public static void main(String[] args)  {
        int t = Integer.parseInt(sc.nextLine());
        List<Customer> customers = new ArrayList<Customer>();
        while (t-- > 0) customers.add(new Customer());
        Collections.sort(customers);
        for (Customer c : customers) System.out.println(c);
        sc.close();
    }
}
