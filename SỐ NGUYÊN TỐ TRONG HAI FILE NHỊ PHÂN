import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.*;
import java.util.stream.Collectors;

public class Sakana {
    static boolean[] prime = new boolean[10001];

    public static void sieve() {
        Arrays.fill(prime, true);
        prime[0] = false;
        prime[1] = false;
        for (int i = 2; i * i < 10001; i++) {
            if (prime[i]) for (int j = i * i; j <= 10000; j += i) prime[j] = false;
        }
    }

    public static void main(String[] args) throws IOException, ClassNotFoundException, FileNotFoundException {
        sieve();
        ArrayList<Integer> data1 = readFile("DATA1.in");
        ArrayList<Integer> data2 = readFile("DATA2.in");

        Map<Integer, Integer> map1 = new HashMap<>();
        Map<Integer, Integer> map2 = new HashMap<>();

        for (int num : data1) {
            if (prime[num]) map1.put(num, map1.getOrDefault(num, 0) + 1);
        }
        for (int num : data2) {
            if (prime[num]) map2.put(num, map2.getOrDefault(num, 0) + 1);
        }

        List<Integer> list = map1.keySet().stream()
                .filter(map2::containsKey)
                .sorted()
                .collect(Collectors.toList());

        for (int i : list) System.out.println(i + " " + map1.get(i) + " " + map2.get(i));
    }

    private static ArrayList<Integer> readFile(String fileName) throws IOException, ClassNotFoundException {
        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName));
        ArrayList<Integer> list = (ArrayList<Integer>) ois.readObject();
        ois.close();
        return list;
    }
}
